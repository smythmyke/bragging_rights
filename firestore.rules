rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuthenticated() &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }

    // Boxing collections - PUBLIC READ for cached data
    match /boxing_cache/{document=**} {
      allow read: if true;  // Public read for cache metadata
      allow write: if false; // Only Cloud Functions can write
    }

    match /boxing_events/{eventId} {
      allow read: if true;  // Public read for cached events
      allow write: if false; // Only Cloud Functions can write
    }

    match /boxing_fights/{fightId} {
      allow read: if true;  // Public read for cached fights
      allow write: if false; // Only Cloud Functions can write
    }

    match /boxing_fighters/{fighterId} {
      allow read: if true;  // Public read for cached fighters
      allow write: if false; // Only Cloud Functions can write
    }

    match /boxing_activity_log/{logId} {
      allow read: if isAdmin();  // Only admins can view logs
      allow write: if false;      // Only Cloud Functions can write
    }

    match /boxing_errors/{errorId} {
      allow read: if isAdmin();  // Only admins can view errors
      allow write: if false;      // Only Cloud Functions can write
    }



    // Game cache metadata - allow authenticated users to write
    match /game_cache_meta/{document=**} {
      allow read: if true;
      allow write: if isAuthenticated();
    }

    // User wallet subcollection
    match /users/{userId}/wallet/{document=**} {
      allow read: if isOwner(userId);
      allow write: if false; // Only Cloud Functions
    }

    // User cards subcollection
    match /users/{userId}/cards/{document=**} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
    }

    // Other collections (existing rules)
    match /pools/{poolId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() &&
        (resource.data.creator == request.auth.uid ||
         request.auth.uid in resource.data.members);
      allow delete: if isAuthenticated() &&
        resource.data.creator == request.auth.uid;
    }

    match /bets/{betId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isOwner(resource.data.userId) &&
        resource.data.status == 'pending';
      allow delete: if false; // Bets cannot be deleted
    }

    match /games/{gameId} {
      allow read: if true;  // Public read for games
      allow write: if isAdmin();
    }

    match /wallets/{walletId} {
      allow read: if isOwner(walletId);
      allow write: if false; // Only Cloud Functions can modify wallets
    }

    match /transactions/{transactionId} {
      allow read: if isAuthenticated() &&
        (resource.data.fromUserId == request.auth.uid ||
         resource.data.toUserId == request.auth.uid);
      allow write: if false; // Only Cloud Functions can create transactions
    }
  }
}